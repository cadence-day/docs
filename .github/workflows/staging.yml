name: Staging Build & Submit

on:
  pull_request:
    branches: [staging]
    types: [opened, synchronize, reopened, closed]

jobs:
  build-only:
    # TEMPORARILY DISABLED - change 'false' to 'github.event.action != "closed"' to re-enable
    if: false && github.event.action != 'closed'
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
      APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      APP_STORE_CONNECT_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_APP_ID: ${{ secrets.APP_STORE_CONNECT_APP_ID }}
      APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: dev
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm

      - name: üîê Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Bump build number
        run: |
          node scripts/bump_version.js --mode=staging --prTitle="${{ github.event.pull_request.title }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app.json
          git commit -m "ci: bump build number (staging)"
          git push origin HEAD

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: npm install

      - name: EAS Update (stg)
        run: |
          doppler run --project cadence-app --config stg --token ${{ secrets.DOPPLER_TOKEN_STG }} --command "eas update --branch stg --message 'Automated update from PR #${{ github.event.pull_request.number }}'"

      - name: EAS Build iOS (no submit)
        run: doppler run --project cadence-app --config stg --token ${{ secrets.DOPPLER_TOKEN_STG }} --command "eas build -p ios --profile stg --non-interactive"

  submit-on-merge:
    if: github.event.action == 'closed' && github.event.pull_request.merged == true
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
      APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
      APP_STORE_CONNECT_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ISSUER_ID }}
      APP_STORE_CONNECT_APP_ID: ${{ secrets.APP_STORE_CONNECT_APP_ID }}
      APP_STORE_CONNECT_TEAM_ID: ${{ secrets.APP_STORE_CONNECT_TEAM_ID }}
      APPLE_DEVELOPER_EMAIL: ${{ secrets.APPLE_DEVELOPER_EMAIL }}
      TESTFLIGHT_ALPHA_GROUP_ID: ${{ secrets.TESTFLIGHT_ALPHA_GROUP_ID }}
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: staging
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm

      - name: üîê Install Doppler CLI
        uses: dopplerhq/cli-action@v3

      - name: Bump build number
        run: |
          node scripts/bump_version.js --mode=staging --prTitle="${{ github.event.pull_request.title }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app.json
          git commit -m "ci: bump build number (staging merged)"
          git push origin staging

      - name: üèó Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîë Setup App Store Connect API Key
        run: |
          echo "${{ secrets.APP_STORE_CONNECT_KEY }}" > ./asc-api-key.p8

      - name: Get App Version & Build Number
        id: get_version
        run: |
          version=$(jq -r '.expo.version' app.json)
          build=$(jq -r '.expo.ios.buildNumber' app.json)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "build=$build" >> $GITHUB_OUTPUT

      - name: EAS Build & Submit iOS
        run: |
          doppler run --project cadence-app --config prd --token ${{ secrets.DOPPLER_TOKEN_PRD }} --command "eas build -p ios --profile prd --non-interactive --auto-submit"

      - name: Wait for App Store Connect Processing
        run: |
          echo "Waiting 300 seconds for App Store Connect to process the build..."
          sleep 300

      - name: Get Latest Build from ASC
        id: asc_build
        run: |
          echo "Fetching latest build for version ${{ steps.get_version.outputs.version }} from App Store Connect..."
          build_id=$(./scripts/asc_api_get_latest_build.sh "${{ secrets.APP_STORE_CONNECT_APP_ID }}" "${{ steps.get_version.outputs.version }}")
          echo "build_id=$build_id" >> $GITHUB_OUTPUT
          echo "Found build ID: $build_id"

      - name: Add Build to Alpha Users Group
        run: |
          echo "Adding build ${{ steps.asc_build.outputs.build_id }} to group ${{ secrets.TESTFLIGHT_ALPHA_GROUP_ID }}"
          ./scripts/asc_api_add_build_to_group.sh "${{ steps.asc_build.outputs.build_id }}" "${{ secrets.TESTFLIGHT_ALPHA_GROUP_ID }}"

      - name: Get Public TestFlight Link
        id: testflight
        run: |
          link=$(./scripts/asc_api_get_public_link.sh "${{ secrets.TESTFLIGHT_ALPHA_GROUP_ID }}")
          echo "testflight_link=$link" >> $GITHUB_OUTPUT
          echo "TestFlight public link: $link"

      - name: Comment on PR with Build Info
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            üöÄ Build uploaded to App Store Connect
            **Version:** ${{ steps.get_version.outputs.version }}
            **Build:** ${{ steps.get_version.outputs.build }}

            [View on App Store Connect](https://appstoreconnect.apple.com/apps/${{ secrets.APP_STORE_CONNECT_APP_ID }}/distribution)

            ${{ steps.testflight.outputs.testflight_link && format('üß™ [Open TestFlight]({0})', steps.testflight.outputs.testflight_link) || '‚è≥ TestFlight link will be available after processing' }}

      - name: Notify Discord
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          pr_body="${{ github.event.pull_request.body }}"
          version="${{ steps.get_version.outputs.version }}"
          build="${{ steps.get_version.outputs.build }}"
          app_store_link="https://appstoreconnect.apple.com/apps/${{ secrets.APP_STORE_CONNECT_APP_ID }}/distribution"
          testflight_link="${{ steps.testflight.outputs.testflight_link }}"

          if [ -n "$testflight_link" ]; then
            payload=$(jq -n \
              --arg title "$pr_title" \
              --arg body "$pr_body" \
              --arg ver "$version" \
              --arg bld "$build" \
              --arg asc_link "$app_store_link" \
              --arg tf_link "$testflight_link" \
              '{
                username: "CI/CD Bot",
                embeds: [
                  {
                    title: "üöÄ New build submitted to App Store Connect",
                    description: $body,
                    fields: [
                      {name: "Version", value: $ver, inline: true},
                      {name: "Build", value: $bld, inline: true},
                      {name: "App Store Connect", value: $asc_link, inline: false},
                      {name: "üß™ TestFlight (Alpha Users)", value: $tf_link, inline: false}
                    ],
                    color: 5814783
                  }
                ]
              }')
          else
            payload=$(jq -n \
              --arg title "$pr_title" \
              --arg body "$pr_body" \
              --arg ver "$version" \
              --arg bld "$build" \
              --arg asc_link "$app_store_link" \
              '{
                username: "CI/CD Bot",
                embeds: [
                  {
                    title: "üöÄ New build submitted to App Store Connect",
                    description: $body,
                    fields: [
                      {name: "Version", value: $ver, inline: true},
                      {name: "Build", value: $bld, inline: true},
                      {name: "App Store Connect", value: $asc_link, inline: false},
                      {name: "TestFlight Status", value: "‚è≥ Processing - link will be available soon", inline: false}
                    ],
                    color: 5814783
                  }
                ]
              }')
          fi

          curl -H "Content-Type: application/json" -X POST -d "$payload" $DISCORD_WEBHOOK
